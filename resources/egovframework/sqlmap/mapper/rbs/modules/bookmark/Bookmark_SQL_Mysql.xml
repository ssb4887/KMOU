<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rbs.modules.bookmark.bookmarkMapper">
	<sql id="BOOKMARK_TABLE_NAME">UNI_PERS_BOOKMARK</sql>
	<select id="selectCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		SELECT COUNT(1) CNT
		FROM 
			<include refid="BOOKMARK_TABLE_NAME"/> A
			<include refid="rbs.commonMapper.SELECT_DF_WHERE"/>
	</select>
	
	<select id="selectList" parameterType="java.util.HashMap" resultType="dataMap">
		SELECT *
		FROM
			<include refid="BOOKMARK_TABLE_NAME"/> A
			<include refid="rbs.commonMapper.SELECT_DF_WHERE"/>
		ORDER BY A.ORDER_IDX ASC
	</select>

	
	<!-- 찜 등록하기 -->
	<insert id="insertBookmark" parameterType="java.util.HashMap">
		INSERT INTO <include refid="BOOKMARK_TABLE_NAME"/> (
			<include refid="rbs.commonMapper.INSERT_COLUMNS"/>
			, REGI_DATE
		) VALUES (
			<include refid="rbs.commonMapper.INSERT_VALUES"/>
			, <include refid="rbs.commonDBMSMapper.currentDate"/>
		)
	</insert>
	
	<!-- 찜 삭제하기 -->
	<delete id="deleteBookmark" parameterType="java.util.HashMap">
		DELETE FROM <include refid="BOOKMARK_TABLE_NAME"/>
		<include refid="rbs.commonMapper.COM_SG_WHERE"/>
	</delete>
	
	<!-- 찜 삭제하기 -->
	<delete id="deleteSelectedBookmark" parameterType="java.util.HashMap">
		DELETE FROM <include refid="BOOKMARK_TABLE_NAME"/>
		<include refid="rbs.commonMapper.COM_SG_WHERE"/>
		AND DOC_ID IN 
		<foreach collection="docIdList" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>		
	</delete>
	
	<!-- 찜 확인 (단일)-->
	<select id="getBookmarkCount" resultType="java.lang.Integer">
		SELECT COUNT(*) 
		FROM <include refid="BOOKMARK_TABLE_NAME"/>
		WHERE 1=1
			AND DOC_ID = #{docId} 
			AND MENU_FG = #{menuFg}
			AND STD_NO = #{stdNo}
	</select>	
	
	<!-- 찜확인(목록) -->
	<select id="getBookmarkList"  parameterType="java.util.HashMap" resultType="egovMap">
		SELECT 
			DOC_ID
		FROM 
			<include refid="BOOKMARK_TABLE_NAME"/>
		WHERE 1=1
		<if test="MENU_FG != 'all'">
			AND MENU_FG = #{MENU_FG} 
		</if>
			AND STD_NO = #{STUDENT_NO}
		<if test="LIMIT != null">LIMIT #{LIMIT}</if>
		<if test="OFFSET != null">OFFSET #{OFFSET}</if>
	</select>
	
	<!-- 찜확인(목록) -->
	<select id="getMyLoveCount"  parameterType="java.util.HashMap" resultType="egovMap">
		SELECT			MENU_FG, COUNT(*) AS CNT
		FROM 			<include refid="BOOKMARK_TABLE_NAME"/>
		WHERE 			STD_NO = #{STUDENT_NO}
		GROUP BY 		MENU_FG
	</select>
	
	
	<select id="selectBookmarkTypeCount" parameterType="java.util.HashMap" resultType="java.lang.Integer"> 
		SELECT  COUNT(*)
		FROM 	<include refid="BOOKMARK_TABLE_NAME"/>
		WHERE 	STD_NO 		 = #{STUDENT_NO}
		AND 	MENU_FG		 = #{MENU_FG}
	</select>
	
	<!-- 비교과 상세정보-->
	<select id="getNonSbjtView" parameterType="java.util.HashMap" resultType="dataMap">
		SELECT
			CAST(target.idx AS CHAR(5)) AS IDX
			, CAST(base.tidx AS CHAR(5)) AS TIDX
			, REPLACE(target.title, '"', "'") AS PROGRAM_TITLE
			, target.cover AS COVER
			, target.updated_date AS UPDATED_DATE			
			, target.abstract AS ABSTRACT
			, target.iidx AS IIDX
			, (select title from im_coursemos_institution_table where idx = target.iidx) AS IIDX_NM
			, target.didx AS DIDX
			, (select title from im_coursemos_department_table where idx = target.didx) AS DIDX_NM
            , CASE target.signin_grade WHEN ('' OR '*') THEN '전체' ELSE target.signin_grade END  as SIGNIN_GRADE
            , REPLACE(REPLACE(REPLACE(target.signin_gender,'MAIL','남자'),'FEMAIL','여자'),'*','전체 성별') as SIGNIN_GENDER
			, CAST(base.count AS CHAR(5)) COUNT
			, CAST(base.time AS CHAR(5)) TIME
			, DATE_FORMAT(FROM_UNIXTIME(base.start_date), '%Y-%m-%d %H:%i') START_DATE
            , CASE DAYOFWEEK(FROM_UNIXTIME(base.start_date))
                WHEN 1 THEN '일'
                WHEN 2 THEN '월'
                WHEN 3 THEN '화'
                WHEN 4 THEN '수'
                WHEN 5 THEN '목'
                WHEN 6 THEN '금'
                WHEN 7 THEN '토' END AS START_DAY
			, DATE_FORMAT(FROM_UNIXTIME(base.end_date), '%Y-%m-%d %H:%i') END_DATE
            , CASE DAYOFWEEK(FROM_UNIXTIME(base.end_date))
                WHEN 1 THEN '일'
                WHEN 2 THEN '월'
                WHEN 3 THEN '화'
                WHEN 4 THEN '수'
                WHEN 5 THEN '목'
                WHEN 6 THEN '금'
                WHEN 7 THEN '토' END AS END_DAY
			, DATE_FORMAT(FROM_UNIXTIME(base.signin_start_date), '%Y-%m-%d') SIGNIN_START_DATE
            , CASE DAYOFWEEK(FROM_UNIXTIME(base.signin_start_date))
                WHEN 1 THEN '일'
                WHEN 2 THEN '월'
                WHEN 3 THEN '화'
                WHEN 4 THEN '수'
                WHEN 5 THEN '목'
                WHEN 6 THEN '금'
                WHEN 7 THEN '토' END AS SIGNIN_START_DAY
			, DATE_FORMAT(FROM_UNIXTIME(base.signin_end_date), '%Y-%m-%d') SIGNIN_END_DATE
            , CASE DAYOFWEEK(FROM_UNIXTIME(base.signin_end_date))
                WHEN 1 THEN '일'
                WHEN 2 THEN '월'
                WHEN 3 THEN '화'
                WHEN 4 THEN '수'
                WHEN 5 THEN '목'
                WHEN 6 THEN '금'
                WHEN 7 THEN '토' END AS SIGNIN_END_DAY
			, CASE WHEN DATEDIFF(FROM_UNIXTIME(base.signin_end_date), SYSDATE()) &lt; 0 THEN '종료'
			   WHEN DATEDIFF(FROM_UNIXTIME(base.signin_start_date), SYSDATE()) &lt;= 0 AND DATEDIFF(FROM_UNIXTIME(base.signin_end_date), SYSDATE()) &gt;= 0 THEN '신청/운영 중'
			   ELSE CONCAT('D-',DATEDIFF(FROM_UNIXTIME(base.signin_start_date), SYSDATE())) END AS D_DAY
			, CAST(base.signin_limit AS CHAR(5)) SIGNIN_LIMIT
			, CAST(base.participant AS CHAR(5)) PARTICIPANT
			, target.signin_type AS SIGNIN_TYPE
			, CASE target.signin_type WHEN 'INDIVIDUAL' THEN '개인' ELSE '팀' END AS SIGNIN_TYPE_NM
			, FLOOR(base.point) AS POINT
			, target.signin_status AS SIGNIN_STATUS
			, REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(target.signin_status,'*','전체'),'ENROLLEE','재학생'),'ABSENCE','휴학생'),'COMPLETE','수료생'),'GRADUATE','졸업생') AS SIGNIN_STATUS_NM
			, target.signin_target AS SIGNIN_TARGET
			, REPLACE(REPLACE(REPLACE(REPLACE(signin_target,'EMPLOYEE','교직원'),'PROFESSOR','교수'),'GRADUATE_ENROLLEE','대학원생'),'GRADUATE','졸업생')  AS SIGNIN_TARGET_NM
			, target.content as CONTENT		
			, target.satisfaction as SATISFACTION	
		FROM 
			coursemos.im_eco_program_table target
		  , im_eco_program_topic_table base
		WHERE 
			target.idx = #{idx}
		AND base.tidx = #{tidx}
		AND target.idx = base.pidx
	</select>
	
	
	<select id="getIsSbjtInsert" parameterType="java.util.HashMap" resultType="java.lang.String">
		WITH AA AS  (
				        SELECT
				            A.DOC_ID
				        FROM
				            VIEW_UNI_EDU_CORS_MJ A,
				            (
				                SELECT
				                    YY,
				                    COURSE_NO,
				                    SHTM_CD,
				                    OPEN_SUST_MJ_CD
				                FROM
				                    VIEW_UNI_OPEN_LT
				                WHERE
				                        YY = SUBSTR(#{docId}, 1, 4)
				                    AND SHTM_CD = SUBSTR(#{docId}, 5, 8)
				                    AND COURSE_NO = SUBSTR(#{docId}, 13, 6)
				                    AND DCLSS_NO = SUBSTR(#{docId}, 19, 3)
				            ) B
				        WHERE
				                A.YY = B.YY
				            AND A.SHTM_CD IN (B.SHTM_CD, 'U0003005')
				            AND A.COURSE_NO = B.COURSE_NO
				            AND A.OPEN_SUST_MJ_CD = B.OPEN_SUST_MJ_CD
                        UNION
                        SELECT
				            A.DOC_ID
				        FROM
				            VIEW_UNI_EDU_CORS_CULT A,
				            (
				                SELECT
				                    YY,
				                    COURSE_NO,
				                    PNT,
				                    THEO_TM_CNT,
                                    PRAC_TM_CNT
				                FROM
				                    VIEW_UNI_OPEN_LT
				                WHERE
				                        YY = SUBSTR(#{docId}, 1, 4)
				                    AND SHTM_CD = SUBSTR(#{docId}, 5, 8)
				                    AND COURSE_NO = SUBSTR(#{docId}, 13, 6)
				                    AND DCLSS_NO = SUBSTR(#{docId}, 19, 3)
				            ) B
				        WHERE
				                A.YY = B.YY
				            AND A.COURSE_NO = B.COURSE_NO
				            AND A.PNT = B.PNT
				            AND A.THEO_TM_CNT = B.THEO_TM_CNT
                            AND A.PRAC_TM_CNT = B.PRAC_TM_CNT				            
				       )
	    SELECT 
	    	NVL2(DDOC_ID, 'N', CDOC_ID) 
	    FROM(
			    SELECT 
			        C.DOC_ID AS CDOC_ID
			      , D.DOC_ID AS DDOC_ID
			    FROM 
			        AA C LEFT JOIN
			        UNI_PERS_BOOKMARK D 
			     ON C.DOC_ID = D.DOC_ID
	     )
	</select>
	
	<!-- 전공 상세정보 -->
	<select id="getMajorView" parameterType="java.util.HashMap" resultType="dataMap">
		SELECT 				MAJOR_CD
							, DEPT_CD
							, COLG_CD
							, MAJOR_NM_KOR
							, MAJOR_NM_ENG
							, MAJOR_INTRO
							, GOAL
							, GRDT_AF_CARR
							, FUSI_MJ_FG
		FROM 				major_info
		WHERE 				MAJOR_CD = #{majorCd}
	</select>
	
	<!-- 학생설계전공 상세정보 -->
	<select id="getStudPlanView" parameterType="java.util.HashMap" resultType="dataMap">
		SELECT 
			 (SELECT SUM(CDT_NUM) FROM UNI_SDM_SBJT_INFMT B WHERE B.SDM_CD = A.SDM_CD AND B.REVSN_NO = A.REVSN_NO) AS TOTAL_CDT_NUM
		    , COUNT(*) OVER () AS TOTAL_COUNT
			, FN_GET_MAJOR_NM_LIST(A.SDM_CD,A.REVSN_NO, 1) AS FIRST_MAJOR
       		, FN_GET_MAJOR_NM_LIST(A.SDM_CD,A.REVSN_NO, 2) AS OTHER_MAJOR		   		
		    , A.*
		FROM 
			uni_sdm_aply_infmt A
		WHERE 
			USE_YN = 'Y'
		AND SDM_DEPT_CD = #{SDM_DEPT_CD}
	</select>
</mapper>